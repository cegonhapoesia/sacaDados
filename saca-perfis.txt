#SACA PERFIS FACEBOOK E OUTROS

Add-Type -AssemblyName "System.Windows.Forms"

function Mostrar-Menu {
    Clear-Host
    Write-Host "========================================"
    Write-Host "      üîé FERRAMENTA EXTRATORA HTML       "
    Write-Host "========================================"
    Write-Host "1. Extrair JSONs v√°lidos de todos os arquivos HTML na pasta"
    Write-Host "2. Extrair poss√≠veis blocos JSON (sem validar) de todos os arquivos HTML"
    Write-Host "3. Procurar por termos no HTML (ex: nomes, emails)"
    Write-Host "4. Sair"
    Write-Host "----------------------------------------"
}

function Escolher-Pasta {
    $folderDialog = New-Object System.Windows.Forms.FolderBrowserDialog
    $folderDialog.ShowNewFolderButton = $true
    $folderDialog.Description = "Selecione a pasta com os arquivos HTML"
    $dialogResult = $folderDialog.ShowDialog()

    if ($dialogResult -eq "OK") {
        return $folderDialog.SelectedPath
    } else {
        Write-Host "‚ùå Nenhuma pasta selecionada." -ForegroundColor Red
        return $null
    }
}

function Extrair-JSON-Valido {
    $folderPath = Escolher-Pasta

    if (-Not $folderPath) { return }

    $destino = [Environment]::GetFolderPath("MyDocuments")
    $htmlFiles = Get-ChildItem -Path $folderPath -Filter "*.html"

    if ($htmlFiles.Count -eq 0) {
        Write-Host "‚ö†Ô∏è Nenhum arquivo HTML encontrado na pasta."
        Pause; return
    }

    $contador = 1
    foreach ($file in $htmlFiles) {
        Write-Host "Processando o ficheiro: $($file.Name)"
        $htmlContent = Get-Content -Path $file.FullName -Raw -Encoding UTF8

        $regex = '(?s)(\{(?:[^{}]|(?<open>\{)|(?<-open>\}))*\}(?(open)(?!)))|(\[(?:[^\[\]]|(?<open>\[)|(?<-open>\]))*\](?(open)(?!)))'
        $jsonMatches = [regex]::Matches($htmlContent, $regex)

        foreach ($match in $jsonMatches) {
            $json = $match.Value.Trim()
            try {
                $null = $json | ConvertFrom-Json -ErrorAction Stop
                $ficheiroJson = Join-Path $destino ("json_valido_$contador.txt")
                $json | Out-File -FilePath $ficheiroJson -Encoding UTF8
                Write-Host "‚úÖ JSON $contador guardado: $ficheiroJson"
                $contador++
            } catch {
                # Ignorar JSON inv√°lido
            }
        }
    }

    Write-Host "`n‚úÖ Conclu√≠do! Guardados $($contador - 1) JSONs v√°lidos."
    Pause
}

function Extrair-JSON-Possivel {
    $folderPath = Escolher-Pasta

    if (-Not $folderPath) { return }

    $destino = [Environment]::GetFolderPath("MyDocuments")
    $htmlFiles = Get-ChildItem -Path $folderPath -Filter "*.html"

    if ($htmlFiles.Count -eq 0) {
        Write-Host "‚ö†Ô∏è Nenhum arquivo HTML encontrado na pasta."
        Pause; return
    }

    $contador = 1
    foreach ($file in $htmlFiles) {
        Write-Host "Processando o ficheiro: $($file.Name)"
        $htmlContent = Get-Content -Path $file.FullName -Raw -Encoding UTF8

        $regex = '(?s)(\{(?:[^{}]|(?<open>\{)|(?<-open>\}))*\}(?(open)(?!)))|(\[(?:[^\[\]]|(?<open>\[)|(?<-open>\]))*\](?(open)(?!)))'
        $jsonMatches = [regex]::Matches($htmlContent, $regex)

        foreach ($match in $jsonMatches) {
            $json = $match.Value.Trim()
            $ficheiroJson = Join-Path $destino ("json_possivel_$contador.txt")
            $json | Out-File -FilePath $ficheiroJson -Encoding UTF8
            Write-Host "üíæ JSON poss√≠vel $contador guardado: $ficheiroJson"
            $contador++
        }
    }

    Write-Host "`n‚ö†Ô∏è Conclu√≠do! Guardados $($contador - 1) blocos que *parecem* JSON."
    Pause
}

function Procurar-Dados {
    $folderPath = Escolher-Pasta

    if (-Not $folderPath) { return }

    $htmlFiles = Get-ChildItem -Path $folderPath -Filter "*.html"

    if ($htmlFiles.Count -eq 0) {
        Write-Host "‚ö†Ô∏è Nenhum arquivo HTML encontrado na pasta."
        Pause; return
    }

    $termo = Read-Host "üîç Termo a procurar (ex: nome, email, id)"
    
    $contador = 0
    foreach ($file in $htmlFiles) {
        Write-Host "Procurando em: $($file.Name)"
        $htmlContent = Get-Content -Path $file.FullName -Raw -Encoding UTF8
        $encontrados = Select-String -InputObject $htmlContent -Pattern $termo -AllMatches

        if ($encontrados.Count -gt 0) {
            Write-Host "`nüü¢ Resultados encontrados no ficheiro $($file.Name):"
            $encontrados | ForEach-Object { Write-Host $_.Line }
            $contador++
        }
    }

    if ($contador -eq 0) {
        Write-Host "‚ö†Ô∏è Nenhum resultado encontrado para '$termo'."
    }

    Pause
}

# LOOP PRINCIPAL
while ($true) {
    Mostrar-Menu
    $opcao = Read-Host "`nüëâ Escolhe uma op√ß√£o (1-4)"
    
    switch ($opcao) {
        "1" { Extrair-JSON-Valido }
        "2" { Extrair-JSON-Possivel }
        "3" { Procurar-Dados }
        "4" {
            Write-Host "`nüëã A sair... At√© logo!"
            break
        }
        default {
            Write-Host "‚ùå Op√ß√£o inv√°lida. Tenta de novo." -ForegroundColor Red
            Pause
        }
    }
}

